name: YC Startup Prod

on:
  push:
    branches: ['develop', 'feature/T5_implement_user_profile_and_final_feature']
  pull_request:
    types: [closed]
    branches: ['develop']
  
# Environment variables needed for the application
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  # Auth Environment Variables
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
  AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
  # Sanity Environment Variables
  NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
  NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
  NEXT_PUBLIC_SANITY_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_API_VERSION }}
  SANITY_WRITE_TOKEN: ${{ secrets.SANITY_WRITE_TOKEN }}
  # Disable Next.js telemetry in CI
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  verify:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Install dependencies with specific handling for canary versions
      - name: Install dependencies
        run: |
          echo "Installing dependencies with canary support..."
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --no-package-lock --legacy-peer-deps --force
          npm install sharp --legacy-peer-deps
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"
          NEXT_TELEMETRY_DISABLED: 1
          
      # Ensure correct Next.js version
      - name: Verify Next.js version
        run: |
          INSTALLED_VERSION=$(npm list next | grep next@ | cut -d'@' -f2)
          if [[ "$INSTALLED_VERSION" != "15.0.4-canary.4" ]]; then
            echo "Incorrect Next.js version installed: $INSTALLED_VERSION"
            npm install next@15.0.4-canary.4 --force
          fi

      # Type checking with increased memory
      - name: Run Type Check
        run: npm run type-check || exit 1
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"

      # Run ESLint
      - name: Run ESLint
        run: npm run lint || exit 0

      # Verify build with increased memory
      - name: Verify the project builds successfully
        run: npm run build
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"

  deploy:
    needs: verify  # Only runs if verify job succeeds
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      # Pull Vercel environment variables
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      # Build project
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      # Deploy to Vercel
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Notify on successful deployment
      - name: Notify Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.issue.number,
              body: `âœ… Deployment successful! [View deployment details](${run_url})`
            });

      # Notify on failure
      - name: Notify Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
            github.rest.issues.create({
              owner,
              repo,
              title: `ðŸš¨ Deployment failed: ${context.workflow}`,
              body: `Deployment [${context.workflow}](${run_url}) failed on ${context.ref}`
            });

      # Cleanup
      - name: Cleanup
        if: always()
        run: |
          npm cache clean --force
          rm -rf node_modules/.cache